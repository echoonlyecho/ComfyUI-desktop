name: Windows Build App
description: Electron-Forge Build/Sign/publish

inputs:
  DIGICERT_FINGERPRINT:
    description: 'DigiCert SHA256 Fingerprint'
    required: true
  GITHUB_TOKEN:
    description: 'GitHub Token'
    required: true
  sign-and-publish:
    description: 'Sign the executable and publish to release page'
    default: 'false'
    required: false
  build-targets:
    description: Override the default targets and build the passed targets. Comma separated list. Include '--target' and full names, eg '--targets=@electron-forge/maker-squirrel, ...etc'
    required: false
    default: ''
runs:
  using: composite
  steps:
    - name: Use Node.js 20.x
      uses: JP250552/setup-node@0c618ceb2e48275dc06e86901822fd966ce75ba2
      with:
        node-version: '20.x'
        corepack: true

    - run: yarn install --immutable
      shell: cmd

    - name: Rebuild node-pty
      shell: cmd
      run: npx electron-rebuild

    - name: Mod
      shell: powershell
      run: |
        (Get-Content node_modules\@electron\windows-sign\dist\cjs\sign-with-signtool.js) -replace [Regex]::Escape('await execute({ ...internalOptions, hash: "sha1'), [Regex]::Escape('//await execute({ ...internalOptions, hash: "sha1') | Out-File -encoding ASCII node_modules\@electron\windows-sign\dist\cjs\sign-with-signtool.js
        (Get-Content node_modules\@electron\windows-sign\dist\esm\sign-with-signtool.js) -replace [Regex]::Escape('await execute({ ...internalOptions, hash: "sha1'), [Regex]::Escape('//await execute({ ...internalOptions, hash: "sha1') | Out-File -encoding ASCII node_modules\@electron\windows-sign\dist\esm\sign-with-signtool.js

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install ComfyUI and create standalone package
      run: |
        set -x
        yarn make:assets
      shell: bash

    - name: Make app
      shell: powershell
      env:
        DIGICERT_FINGERPRINT: ${{ inputs.DIGICERT_FINGERPRINT }}
        DEBUG: electron-forge:*
        PUBLISH: ${{ inputs.sign-and-publish }}
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
      run: yarn run make

    - name: Print SignLogs
      if: ${{inputs.sign-and-publish == 'true' && always()}}
      continue-on-error: true
      shell: powershell
      run: cd $HOME ; gc .signingmanager\logs\smksp.log

    - name: verify signing
      if: ${{inputs.sign-and-publish == 'true'}}
      run: signtool verify /v /pa dist/ComfyUI-win32-x64/ComfyUI.exe
      shell: cmd
